name: Kyverno Scan
on:
  workflow_call:
jobs:
  kyverno-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: kordian7/workflow-repo
          ref: main
      - name: Download values.yaml
        id: artifact-download
        uses: actions/download-artifact@v4
        with:
          name: values
          path: .
      - name: Install kyverno-json
        uses: kyverno/action-install-kyverno-json@main
        with:
          release: 'v0.0.1'
      - name: Check install
        shell: bash
        run: kyverno-json version
      - name: List files in the repository
        run: |
          ls ${{ github.action_path }}
      - name: Run Kyverno validation
        shell: bash
        run: |
          output=$(kyverno-json scan --payload values.yaml --policy ./policies/policy.yaml)
          echo "$output"
          if echo "$output" | grep -q "FAILED"; then
            echo "Applications-live scan failed"
            exit 1
          else
            echo "Applications-live scan passed"
          fi
      - name: Find artifact ID by name
        id: find-artifact
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const artifact = data.artifacts.find(a => a.name === 'values');
            if (artifact) {
             core.setOutput('artifact-id', artifact.id);
            }
      - run: echo "Artifacts ID ${{ steps.find-artifact.outputs.artifact-id }}."
      - name: Delete Artifact
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: ${{ steps.find-artifact.outputs.artifact-id }}
            });
      - run: echo "This job's status is ${{ job.status }}."
